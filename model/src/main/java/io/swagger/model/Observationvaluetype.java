/*
 * mmlc
 * This is a POC for memylife version 1.0.1
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;

/**
 * Observationvaluetype
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2016-11-17T17:56:44.743Z")
public class Observationvaluetype   {
  @JsonProperty("valuedouble")
  private BigDecimal valuedouble = null;

  @JsonProperty("valuestring")
  private String valuestring = null;

  @JsonProperty("unit")
  private String unit = null;

  @JsonProperty("valuetype")
  private String valuetype = null;

  public Observationvaluetype valuedouble(BigDecimal valuedouble) {
    this.valuedouble = valuedouble;
    return this;
  }

   /**
   * Get valuedouble
   * @return valuedouble
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getValuedouble() {
    return valuedouble;
  }

  public void setValuedouble(BigDecimal valuedouble) {
    this.valuedouble = valuedouble;
  }

  public Observationvaluetype valuestring(String valuestring) {
    this.valuestring = valuestring;
    return this;
  }

   /**
   * Get valuestring
   * @return valuestring
  **/
  @ApiModelProperty(value = "")
  public String getValuestring() {
    return valuestring;
  }

  public void setValuestring(String valuestring) {
    this.valuestring = valuestring;
  }

  public Observationvaluetype unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @ApiModelProperty(value = "")
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }

  public Observationvaluetype valuetype(String valuetype) {
    this.valuetype = valuetype;
    return this;
  }

   /**
   * Get valuetype
   * @return valuetype
  **/
  @ApiModelProperty(value = "")
  public String getValuetype() {
    return valuetype;
  }

  public void setValuetype(String valuetype) {
    this.valuetype = valuetype;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Observationvaluetype observationvaluetype = (Observationvaluetype) o;
    return Objects.equals(this.valuedouble, observationvaluetype.valuedouble) &&
        Objects.equals(this.valuestring, observationvaluetype.valuestring) &&
        Objects.equals(this.unit, observationvaluetype.unit) &&
        Objects.equals(this.valuetype, observationvaluetype.valuetype);
  }

  @Override
  public int hashCode() {
    return Objects.hash(valuedouble, valuestring, unit, valuetype);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Observationvaluetype {\n");
    
    sb.append("    valuedouble: ").append(toIndentedString(valuedouble)).append("\n");
    sb.append("    valuestring: ").append(toIndentedString(valuestring)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    valuetype: ").append(toIndentedString(valuetype)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

